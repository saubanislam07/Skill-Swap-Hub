{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Ionicons } from '@expo/vector-icons';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AuthProvider, useAuth } from \"./src/context/AuthContext\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport SignUpScreen from \"./src/screens/SignUpScreen\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport ExploreScreen from \"./src/screens/ExploreScreen\";\nimport MessagesScreen from \"./src/screens/MessagesScreen\";\nimport ProfileScreen from \"./src/screens/ProfileScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nfunction ProfileStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"ProfileMain\",\n      component: ProfileScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen\n    })]\n  });\n}\nfunction MainTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Explore') {\n            iconName = focused ? 'search' : 'search-outline';\n          } else if (route.name === 'Messages') {\n            iconName = focused ? 'chatbubble' : 'chatbubble-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#4CAF50',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Explore\",\n      component: ExploreScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Messages\",\n      component: MessagesScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileStack\n    })]\n  });\n}\nfunction AppNavigator() {\n  var _useAuth = useAuth(),\n    isAuthenticated = _useAuth.isAuthenticated,\n    isLoading = _useAuth.isLoading;\n  if (isLoading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4CAF50\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading...\"\n      })]\n    });\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: !isAuthenticated ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"SignUp\",\n          component: SignUpScreen\n        })]\n      }) : _jsx(Stack.Screen, {\n        name: \"Main\",\n        component: MainTabs\n      })\n    })\n  });\n}\nexport default function App() {\n  return _jsx(AuthProvider, {\n    children: _jsx(AppNavigator, {})\n  });\n}\nvar styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: 16,\n    color: '#666'\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","createStackNavigator","Ionicons","View","Text","ActivityIndicator","StyleSheet","AuthProvider","useAuth","LoginScreen","SignUpScreen","HomeScreen","ExploreScreen","MessagesScreen","ProfileScreen","SettingsScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","Stack","ProfileStack","Navigator","screenOptions","headerShown","children","Screen","name","component","MainTabs","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","AppNavigator","_useAuth","isAuthenticated","isLoading","style","styles","loadingContainer","loadingText","App","create","flex","justifyContent","alignItems","backgroundColor","marginTop","fontSize"],"sources":["C:/Kiro app dev/App.js"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native';\r\n\r\nimport { AuthProvider, useAuth } from './src/context/AuthContext';\r\nimport LoginScreen from './src/screens/LoginScreen';\r\nimport SignUpScreen from './src/screens/SignUpScreen';\r\nimport HomeScreen from './src/screens/HomeScreen';\r\nimport ExploreScreen from './src/screens/ExploreScreen';\r\nimport MessagesScreen from './src/screens/MessagesScreen';\r\nimport ProfileScreen from './src/screens/ProfileScreen';\r\nimport SettingsScreen from './src/screens/SettingsScreen';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nfunction ProfileStack() {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"ProfileMain\" component={ProfileScreen} />\r\n      <Stack.Screen name=\"Settings\" component={SettingsScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction MainTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === 'Home') {\r\n            iconName = focused ? 'home' : 'home-outline';\r\n          } else if (route.name === 'Explore') {\r\n            iconName = focused ? 'search' : 'search-outline';\r\n          } else if (route.name === 'Messages') {\r\n            iconName = focused ? 'chatbubble' : 'chatbubble-outline';\r\n          } else if (route.name === 'Profile') {\r\n            iconName = focused ? 'person' : 'person-outline';\r\n          }\r\n\r\n          return <Ionicons name={iconName} size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: '#4CAF50',\r\n        tabBarInactiveTintColor: 'gray',\r\n        headerShown: false,\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n      <Tab.Screen name=\"Explore\" component={ExploreScreen} />\r\n      <Tab.Screen name=\"Messages\" component={MessagesScreen} />\r\n      <Tab.Screen name=\"Profile\" component={ProfileStack} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nfunction AppNavigator() {\r\n  const { isAuthenticated, isLoading } = useAuth();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color=\"#4CAF50\" />\r\n        <Text style={styles.loadingText}>Loading...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        {!isAuthenticated ? (\r\n          <>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n            <Stack.Screen name=\"SignUp\" component={SignUpScreen} />\r\n          </>\r\n        ) : (\r\n          <Stack.Screen name=\"Main\" component={MainTabs} />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <AuthProvider>\r\n      <AppNavigator />\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n  },\r\n  loadingText: {\r\n    marginTop: 10,\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}