{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar conversations = [{\n  id: 1,\n  name: 'Rafiq Ahmed',\n  lastMessage: 'Great! See you then. I\\'ll bring my guitar.',\n  time: '2m ago',\n  unread: false,\n  avatar: 'R',\n  skill: 'Guitar ↔ Cooking'\n}, {\n  id: 2,\n  name: 'Rashida Begum',\n  lastMessage: 'When would be a good time for our first session?',\n  time: '1h ago',\n  unread: true,\n  avatar: 'R',\n  skill: 'Bengali ↔ Photography'\n}, {\n  id: 3,\n  name: 'Karim Khan',\n  lastMessage: 'Thanks for the coding tips! Ready for yoga tomorrow?',\n  time: '3h ago',\n  unread: false,\n  avatar: 'K',\n  skill: 'Web Dev ↔ Yoga'\n}];\nexport default function MessagesScreen() {\n  var renderConversation = function renderConversation(_ref) {\n    var item = _ref.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.conversationCard,\n      children: [_jsxs(View, {\n        style: styles.avatarContainer,\n        children: [_jsx(View, {\n          style: [styles.avatar, item.unread && styles.unreadAvatar],\n          children: _jsx(Text, {\n            style: styles.avatarText,\n            children: item.avatar\n          })\n        }), item.unread && _jsx(View, {\n          style: styles.unreadDot\n        })]\n      }), _jsxs(View, {\n        style: styles.conversationContent,\n        children: [_jsxs(View, {\n          style: styles.conversationHeader,\n          children: [_jsx(Text, {\n            style: styles.name,\n            children: item.name\n          }), _jsx(Text, {\n            style: styles.time,\n            children: item.time\n          })]\n        }), _jsx(Text, {\n          style: styles.skillBadge,\n          children: item.skill\n        }), _jsx(Text, {\n          style: [styles.lastMessage, item.unread && styles.unreadMessage],\n          children: item.lastMessage\n        })]\n      }), _jsx(Ionicons, {\n        name: \"chevron-forward\",\n        size: 20,\n        color: \"#ccc\"\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Messages\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.newMessageButton,\n        children: _jsx(Ionicons, {\n          name: \"create-outline\",\n          size: 24,\n          color: \"#4CAF50\"\n        })\n      })]\n    }), _jsx(FlatList, {\n      data: conversations,\n      renderItem: renderConversation,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      style: styles.conversationsList,\n      showsVerticalScrollIndicator: false\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingTop: 50\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    marginBottom: 20\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  newMessageButton: {\n    padding: 8\n  },\n  conversationsList: {\n    paddingHorizontal: 20\n  },\n  conversationCard: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0'\n  },\n  avatarContainer: {\n    position: 'relative',\n    marginRight: 15\n  },\n  avatar: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: '#4CAF50',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  unreadAvatar: {\n    backgroundColor: '#FF6B6B'\n  },\n  avatarText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  unreadDot: {\n    position: 'absolute',\n    top: -2,\n    right: -2,\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    backgroundColor: '#FF6B6B',\n    borderWidth: 2,\n    borderColor: '#fff'\n  },\n  conversationContent: {\n    flex: 1\n  },\n  conversationHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4\n  },\n  name: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333'\n  },\n  time: {\n    fontSize: 12,\n    color: '#999'\n  },\n  skillBadge: {\n    fontSize: 12,\n    color: '#4CAF50',\n    fontWeight: '500',\n    marginBottom: 4\n  },\n  lastMessage: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 18\n  },\n  unreadMessage: {\n    fontWeight: '600',\n    color: '#333'\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","FlatList","TouchableOpacity","Image","Ionicons","jsx","_jsx","jsxs","_jsxs","conversations","id","name","lastMessage","time","unread","avatar","skill","MessagesScreen","renderConversation","_ref","item","style","styles","conversationCard","children","avatarContainer","unreadAvatar","avatarText","unreadDot","conversationContent","conversationHeader","skillBadge","unreadMessage","size","color","container","header","title","newMessageButton","data","renderItem","keyExtractor","toString","conversationsList","showsVerticalScrollIndicator","create","flex","backgroundColor","paddingTop","flexDirection","justifyContent","alignItems","paddingHorizontal","marginBottom","fontSize","fontWeight","padding","paddingVertical","borderBottomWidth","borderBottomColor","position","marginRight","width","height","borderRadius","top","right","borderWidth","borderColor","lineHeight"],"sources":["C:/Kiro app dev/src/screens/MessagesScreen.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Image,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst conversations = [\r\n  {\r\n    id: 1,\r\n    name: 'Rafiq Ahmed',\r\n    lastMessage: 'Great! See you then. I\\'ll bring my guitar.',\r\n    time: '2m ago',\r\n    unread: false,\r\n    avatar: 'R',\r\n    skill: 'Guitar ↔ Cooking',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Rashida Begum',\r\n    lastMessage: 'When would be a good time for our first session?',\r\n    time: '1h ago',\r\n    unread: true,\r\n    avatar: 'R',\r\n    skill: 'Bengali ↔ Photography',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Karim Khan',\r\n    lastMessage: 'Thanks for the coding tips! Ready for yoga tomorrow?',\r\n    time: '3h ago',\r\n    unread: false,\r\n    avatar: 'K',\r\n    skill: 'Web Dev ↔ Yoga',\r\n  },\r\n];\r\n\r\nexport default function MessagesScreen() {\r\n  const renderConversation = ({ item }) => (\r\n    <TouchableOpacity style={styles.conversationCard}>\r\n      <View style={styles.avatarContainer}>\r\n        <View style={[styles.avatar, item.unread && styles.unreadAvatar]}>\r\n          <Text style={styles.avatarText}>{item.avatar}</Text>\r\n        </View>\r\n        {item.unread && <View style={styles.unreadDot} />}\r\n      </View>\r\n\r\n      <View style={styles.conversationContent}>\r\n        <View style={styles.conversationHeader}>\r\n          <Text style={styles.name}>{item.name}</Text>\r\n          <Text style={styles.time}>{item.time}</Text>\r\n        </View>\r\n        <Text style={styles.skillBadge}>{item.skill}</Text>\r\n        <Text style={[styles.lastMessage, item.unread && styles.unreadMessage]}>\r\n          {item.lastMessage}\r\n        </Text>\r\n      </View>\r\n\r\n      <Ionicons name=\"chevron-forward\" size={20} color=\"#ccc\" />\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Messages</Text>\r\n        <TouchableOpacity style={styles.newMessageButton}>\r\n          <Ionicons name=\"create-outline\" size={24} color=\"#4CAF50\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={conversations}\r\n        renderItem={renderConversation}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        style={styles.conversationsList}\r\n        showsVerticalScrollIndicator={false}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    paddingTop: 50,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n    marginBottom: 20,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  newMessageButton: {\r\n    padding: 8,\r\n  },\r\n  conversationsList: {\r\n    paddingHorizontal: 20,\r\n  },\r\n  conversationCard: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingVertical: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f0f0f0',\r\n  },\r\n  avatarContainer: {\r\n    position: 'relative',\r\n    marginRight: 15,\r\n  },\r\n  avatar: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    backgroundColor: '#4CAF50',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  unreadAvatar: {\r\n    backgroundColor: '#FF6B6B',\r\n  },\r\n  avatarText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n  },\r\n  unreadDot: {\r\n    position: 'absolute',\r\n    top: -2,\r\n    right: -2,\r\n    width: 12,\r\n    height: 12,\r\n    borderRadius: 6,\r\n    backgroundColor: '#FF6B6B',\r\n    borderWidth: 2,\r\n    borderColor: '#fff',\r\n  },\r\n  conversationContent: {\r\n    flex: 1,\r\n  },\r\n  conversationHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 4,\r\n  },\r\n  name: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#333',\r\n  },\r\n  time: {\r\n    fontSize: 12,\r\n    color: '#999',\r\n  },\r\n  skillBadge: {\r\n    fontSize: 12,\r\n    color: '#4CAF50',\r\n    fontWeight: '500',\r\n    marginBottom: 4,\r\n  },\r\n  lastMessage: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    lineHeight: 18,\r\n  },\r\n  unreadMessage: {\r\n    fontWeight: '600',\r\n    color: '#333',\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}